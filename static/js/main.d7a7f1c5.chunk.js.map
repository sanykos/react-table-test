{"version":3,"sources":["Loader/Loader.js","Table/Table.js","DetailRowView/DetailRowView.js","ModeSelector/ModeSelector.js","TableSearch/TableSearch.js","App.js","index.js"],"names":["className","onSort","data","sort","sortField","onRowSelect","onClick","bind","map","item","key","id","phone","firstName","lastName","email","person","defaultValue","description","address","city","state","streetAddress","zip","ModeSelector","onSelect","style","display","justifyContent","padding","props","useState","value","setValue","type","onSearch","placeholder","aria-label","aria-describedby","onChange","event","target","App","isModeSelected","setIsModeSelected","isLoading","setIsLoading","search","setSearch","setData","setSort","setSortField","row","setRow","currentPage","setCurrentPage","fetchData","url","a","fetch","response","json","orderData","orderBy","filteredData","filter","toLowerCase","includes","pageCount","Math","ceil","length","displayData","chunk","TableSearch","Table","clonedData","concat","sortType","dataOrder","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","DetailRowView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7a7f1c5.chunk.js","sourcesContent":["import React from 'react'\nimport './Loader.css'\n\nexport default () => {\n        return(\n            <div className=\"lds-dual-ring\"></div>\n        )\n}","import React from 'react'\n\n\nexport default ({onSort, data, sort, sortField, onRowSelect }) => {\n    return (<table className=\"table\">\n         <thead>\n            <tr>\n                <th onClick={onSort.bind(null, 'id')}>id\n                {sortField === 'id' ? <sup>{sort}</sup>: null}\n                </th>\n                <th onClick={onSort.bind(null, 'firstName')}>firstName\n                {sortField === 'firstName' ? <sup>{sort}</sup>: null}\n                </th>\n                <th onClick={onSort.bind(null, 'lastName')}>lastName \n                {sortField === 'lastName' ? <sup>{sort}</sup>: null}\n                </th>\n                <th onClick={onSort.bind(null, 'email')}>email\n                {sortField === 'email' ? <sup>{sort}</sup>: null}\n                </th>\n                <th onClick={onSort.bind(null, 'phone')}>phone\n                {sortField === 'phone' ? <sup>{sort}</sup>: null}\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            {\n                data?.map(item => (\n                    <tr key={item.id+item.phone} onClick={onRowSelect.bind(null, item)}>\n                        <td>{item.id}</td>\n                        <td>{item.firstName}</td>\n                        <td>{item.lastName}</td>\n                        <td>{item.email}</td>\n                        <td>{item.phone}</td>\n                    </tr>\n                ))\n            }\n        </tbody>\n    </table>\n    )\n}","import React from 'react'\n\nexport default ({person}) => (\n    <div>\n        <p> Выбран пользователь <strong>{person.firstName + ' ' + person.lastName}</strong></p>   \n       <p>\n       Описание: <br/>\n        <textarea defaultValue={person.description}/>\n       </p>\n<p>Адрес проживания: <strong>{person.address.city}</strong></p>\n       <p>Город: <strong>{person.address.state}</strong></p>\n       <p>Провинция/штат: <strong>{person.address.streetAddress}</strong></p>\n       <p>Индекс: <strong>{person.address.zip}</strong></p>\n    </div>\n)","import React from 'react'\n\nconst ModeSelector = ({onSelect}) => {\n\n    const smallUrl = 'https://filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\n    \n    const bigUrl = 'https://filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'\n\n    return (\n        <div style={{display:'flex', justifyContent:'center', padding: '50px 0'}}>\n            <button onClick={() => onSelect(smallUrl)} className=\"btn btn-primary\">32 элемента</button>\n            <button onClick={() => onSelect(bigUrl)} className=\"btn btn-secondary\">1000 элементов</button>\n        </div>\n    )\n}\n\nexport default ModeSelector;","import React, {useState} from 'react'\n\nexport default props => {\n\n    const [value, setValue] = useState('')\n\n    const valueChangeHandler = event => {\n        setValue(event.target.value)\n    }\n\n    return(\n        <div className=\"input-group mb-3 mt-3\">\n            <div className=\"input-group-prepend\">\n                <button className=\"btn btn-outline-secondary\" type=\"button\"\n                onClick={() => props.onSearch(value)}>Button</button>\n            </div>\n             <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\"\n             onChange={valueChangeHandler}\n             value={value}/>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport {orderBy, chunk} from 'lodash'\nimport ReactPaginate from 'react-paginate';\nimport Loader from './Loader/Loader'\nimport Table from './Table/Table'\nimport DetailRowView from './DetailRowView/DetailRowView'\nimport ModeSelector from './ModeSelector/ModeSelector'\nimport TableSearch from './TableSearch/TableSearch'\nimport './App.css';\n\n\n\n\nconst App = () => {\n  const [isModeSelected, setIsModeSelected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const [data, setData] = useState([]);\n  const [sort, setSort] = useState('asc');\n  const [sortField, setSortField] = useState('id');\n  const [row, setRow] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0);\n\n\n// Ждем когда сформируется дом дерево\n  const fetchData = async(url) => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const orderData = orderBy(data, sortField, sort);\n    setIsLoading(false);\n    setData(orderData);\n  }\n\n  const onSort  = sortField =>  {\n    const clonedData = data.concat()\n    const sortType = sort === 'asc' ? 'desc' : 'asc'\n\n    const dataOrder = orderBy(clonedData, sortField, sortType);\n    setSort(sort);\n    setData(dataOrder);\n    setSortField(sortField);\n  }\n\n  const modeSelectHandler = (url) => {\n    setIsLoading(true);\n    setIsModeSelected(true);\n    fetchData(url)\n  }\n\n  const onRowSelect = row => {\n    setRow(row)\n  }\n\n\n  const pageChangeHandler = ({selected}) => {\n    setCurrentPage(selected)\n  }\n\n  const searchHandler = search => {\n    setSearch(search)\n    setCurrentPage(0);\n  }\n\n  const getFilteredData = () => {\n    if(!search) {\n      return data\n    }\n\n    return data.filter(item => item['firstName'].toLowerCase().includes(search.toLowerCase()))\n  }\n\n  const pageSize = 50;\n\n  const filteredData = getFilteredData()\n  const pageCount = Math.ceil(filteredData.length / pageSize)\n\n  const displayData = chunk(filteredData, pageSize)[currentPage];\n\n\n  return (\n    <>\n        <ModeSelector onSelect={modeSelectHandler}/>\n        <div className=\"container\">\n          {isLoading \n          ? <Loader /> \n          : isModeSelected && <> \n            <TableSearch onSearch={searchHandler}/>\n            <Table data={displayData} \n                  onSort={onSort}\n                  sort={sort}\n                  sortField={sortField}\n                  onRowSelect={onRowSelect}/>\n            </>}\n            {data.length > pageSize \n              && <ReactPaginate\n              previousLabel={'<'}\n              nextLabel={'>'}\n              breakLabel={'...'}\n              breakClassName={'break-me'}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={5}\n              onPageChange={pageChangeHandler}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              pageClassName={'page-item'}\n              pageLinkClassName={'page-link'}\n              previousClassName={'page-item'}\n              nextClassName={'next-item'}\n              previousLinkClassName={'page-link'}\n              nextLinkClassName={'page-link'}\n              forcePage\t={currentPage}\n            />\n          }\n          {\n          row && <DetailRowView person={row} />\n        }\n        </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}